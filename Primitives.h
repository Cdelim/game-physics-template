#include "ResourceManager.h"
#include <vector>
#include <utility>

typedef std::vector<ResourceManager::PrimitiveVertexAttributes> VertexList;
typedef std::vector<uint16_t> IndexList;

namespace cube
{
    // positions and normals
    const VertexList vertices = {
        {{-0.5, -0.5, -0.5}, {0.0, 0.0, -1.0}},
        {{0.5, -0.5, -0.5}, {0.0, 0.0, -1.0}},
        {{0.5, 0.5, -0.5}, {0.0, 0.0, -1.0}},
        {{-0.5, 0.5, -0.5}, {0.0, 0.0, -1.0}},
        {{-0.5, -0.5, -0.5}, {-1.0, 0.0, 0.0}},
        {{-0.5, 0.5, -0.5}, {-1.0, 0.0, 0.0}},
        {{-0.5, 0.5, 0.5}, {-1.0, 0.0, 0.0}},
        {{-0.5, -0.5, 0.5}, {-1.0, 0.0, 0.0}},
        {{0.5, -0.5, -0.5}, {1.0, 0.0, 0.0}},
        {{0.5, 0.5, -0.5}, {1.0, 0.0, 0.0}},
        {{0.5, 0.5, 0.5}, {1.0, 0.0, 0.0}},
        {{0.5, -0.5, 0.5}, {1.0, 0.0, 0.0}},
        {{-0.5, -0.5, 0.5}, {0.0, 0.0, 1.0}},
        {{0.5, -0.5, 0.5}, {0.0, 0.0, 1.0}},
        {{0.5, 0.5, 0.5}, {0.0, 0.0, 1.0}},
        {{-0.5, 0.5, 0.5}, {0.0, 0.0, 1.0}},
        {{-0.5, 0.5, -0.5}, {0.0, 1.0, 0.0}},
        {{0.5, 0.5, -0.5}, {0.0, 1.0, 0.0}},
        {{0.5, 0.5, 0.5}, {0.0, 1.0, 0.0}},
        {{-0.5, 0.5, 0.5}, {0.0, 1.0, 0.0}},
        {{-0.5, -0.5, -0.5}, {0.0, -1.0, 0.0}},
        {{0.5, -0.5, -0.5}, {0.0, -1.0, 0.0}},
        {{0.5, -0.5, 0.5}, {0.0, -1.0, 0.0}},
        {{-0.5, -0.5, 0.5}, {0.0, -1.0, 0.0}},
    };
    const IndexList indices = {
        0, 2, 1, 0, 3, 2,       // front face
        4, 6, 5, 4, 7, 6,       // left face
        8, 9, 10, 8, 10, 11,    // right face
        12, 13, 14, 12, 14, 15, // back face
        16, 18, 17, 16, 19, 18, // top face
        20, 21, 22, 20, 22, 23, // bottom face
    };
}
namespace quad
{
    const VertexList vertices = {
        {{-0.5, -0.5, 0}, {0, 0, 1}},
        {{0.5, -0.5, 0}, {0, 0, 1}},
        {{0.5, 0.5, 0}, {0, 0, 1}},
        {{-0.5, 0.5, 0}, {0, 0, 1}},
    };
    const IndexList indices = {
        0,
        1,
        2,
        0,
        2,
        3,
        0,
        2,
        1,
        0,
        3,
        2,
    };
}